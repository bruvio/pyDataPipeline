name: Python FAIR Data Pipeline
on: [push]
jobs:
  test:
    name: Test ${{ matrix.os }} (Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python: ["3.7"] #,"3.8", "3.9"]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: "x64"
      - name: Install graphviz  
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get install graphviz
          elif [ "$RUNNER_OS" == "Windows" ]; then
              choco install graphviz
          elif [ "$RUNNER_OS" == "Darwin" ]; then
              brew install graphviz
          fi
        shell: bash
      - name: Install local registry
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
              curl -fsSL https://data.scrc.uk/static/localregistry.sh | /bin/bash -s -- -b main
          fi
        shell: bash
      - name: Checkout pySimpleModel
        if: matrix.os == 'windows-latest'
        uses: actions/checkout@v2
        with:
          repository: FAIRDataPipeline/data-registry
          path: registry
      - name: Move registry
        if: matrix.os == 'windows-latest'
        run: |
              mv data-registry ../.fair/registry
      - name: install local registry on windows
        if: matrix.os == 'windows-latest'
        run: |
          python3 -m venv ../fair/registry/venv
          .fair\registry\venv\Scripts\activate.bat
          python -m pip install --upgrade pip wheel
          python -m pip install -r ../fair/registry/local-requirements.txt
          export DJANGO_SETTINGS_MODULE="drams.local-settings"
          export DJANGO_SUPERUSER_USERNAME=admin
          export DJANGO_SUPERUSER_PASSWORD=admin
          cd .fair/registry/scripts || exit
          ./rebuild-local.sh
        shell: bash
      - name: Install Required
        run: brew install memcached
        if: matrix.os == 'macos-latest'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Checkout pySimpleModel
        uses: actions/checkout@v2
        with:
          repository: FAIRDataPipeline/pySimpleModel
          path: pySimpleModel
      - name: Move pySimpleModel
        run: |
              mv pySimpleModel ../pySimpleModel
      - name: Run Tests on Windows
        run: |
          poetry install
          .venv\Scripts\activate.bat
          pip install fair-cli
          pip install ../pySimpleModel
          fair init --ci
          fair registry start
          fair pull data_pipeline_api/ext/SEIRSconfig.yaml
          fair run data_pipeline_api/ext/SEIRSconfig.yaml

          python3 -m poetry run pytest --cov=data_pipeline_api  --cov-report=xml --cov-report=term -s tests/
        if: matrix.os == 'windows-latest'
      - name: Run Tests on other OS
        run: |
          poetry install
          source .venv/bin/activate
          pip install fair-cli
          pip install ../pySimpleModel
          fair init --ci
          fair registry start
          fair pull data_pipeline_api/ext/SEIRSconfig.yaml
          fair run data_pipeline_api/ext/SEIRSconfig.yaml

          python3 -m poetry run pytest --cov=data_pipeline_api  --cov-report=xml --cov-report=term -s tests/
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
        if: matrix.python == '3.9' && matrix.os == 'ubuntu-20.04'
